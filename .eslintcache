[{"C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\index.js":"1","C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\App.js":"2","C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\Api.js":"3","C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\components\\Summary.js":"4","C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\components\\AreaChart.js":"5"},{"size":218,"mtime":1609793486635,"results":"6","hashOfConfig":"7"},{"size":2083,"mtime":1609953340629,"results":"8","hashOfConfig":"7"},{"size":479,"mtime":1609797461663,"results":"9","hashOfConfig":"7"},{"size":7934,"mtime":1609966098372,"results":"10","hashOfConfig":"7"},{"size":1545,"mtime":1609965614359,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"egjqbi",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\index.js",[],["25","26"],"C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\App.js",[],"C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\Api.js",[],"C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\components\\Summary.js",["27","28"],"import React, { useState, useEffect } from \"react\";\r\nimport { fetchSummary } from \"../Api\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\nconst Summary = ({ country }) => {\r\n  const classes = useStyles();\r\n  const [summaries, setSummary] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSummaries = async () => {\r\n      const data = await fetchSummary();\r\n      setSummary(data);\r\n    };\r\n    fetchSummaries();\r\n  },[]);\r\n  {/*Global Data*/}\r\n  const allGlobalDailyData = () => {\r\n    return (\r\n     \r\n      <ul>\r\n      <li>New Confirmed:{summaries.Global.NewConfirmed}</li>\r\n      <li>Total Confirmed:{summaries.Global.TotalConfirmed}</li>\r\n      <li>new Deaths:{summaries.Global.NewDeaths}</li>\r\n      <li>Total Confirmed:{summaries.Global.TotalDeahs}</li>\r\n      <li>Total Recovered:{summaries.Global.TotalRecovered}</li>\r\n    </ul>\r\n    )\r\n  };\r\n  {/*All Country*/}\r\n  const dailySelectedCountryData=()=>{\r\n    return(\r\n<TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Country</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NewConfirmed</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    TotalConfirmed\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NewDeaths</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">TotalDeaths</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NewRecovered</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    TotalRecovered\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/* {summaries.Countries.map((item) => (\r\n                  <StyledTableRow key={item.Country}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.Country}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.NewConfirmed}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.TotalConfirmed}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.NewDeaths}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.TotalDeaths}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.NewRecovered}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.TotalRecovered}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))} */}\r\n                 {summaries.Countries.filter(item =>item.Slug===country).map(Filtered=> (\r\n                  <StyledTableRow key={Filtered.Country}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {Filtered.Country}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {Filtered.NewConfirmed}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {Filtered.TotalConfirmed}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {Filtered.NewDeaths}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {Filtered.TotalDeaths}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {Filtered.NewRecovered}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {Filtered.TotalRecovered}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n    )\r\n  }\r\n  const dailyAllWorldData=()=>{\r\n    return(\r\n<TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Country</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NewConfirmed</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    TotalConfirmed\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NewDeaths</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">TotalDeaths</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NewRecovered</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    TotalRecovered\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {summaries.Countries.map((item) => (\r\n                  <StyledTableRow key={item.Country}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.Country}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.NewConfirmed}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.TotalConfirmed}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.NewDeaths}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.TotalDeaths}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.NewRecovered}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.TotalRecovered}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n                \r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid Container>\r\n        <Grid item xs={12}>\r\n          <Card variant=\"outlined\">\r\n            <CardContent>\r\n            <h1>Global Data</h1>\r\n              {allGlobalDailyData()}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n\r\n          {dailySelectedCountryData()}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n\r\n          {dailyAllWorldData()}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n",["29","30"],"C:\\Users\\Emre\\Desktop\\Github Prohelerim\\Covid-19-react\\covid19\\src\\components\\AreaChart.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":49,"column":3,"nodeType":"37","messageId":"38","endLine":49,"endColumn":20},{"ruleId":"35","severity":1,"message":"36","line":62,"column":3,"nodeType":"37","messageId":"38","endLine":62,"endColumn":20},{"ruleId":"31","replacedBy":"39"},{"ruleId":"33","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["41"],["42"],"no-global-assign","no-unsafe-negation"]